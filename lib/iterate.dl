
; Takes a list and returns a new list that contains only
; items of the source list that evaluate to true by the
; passed function.
;
; fn: lst[i] -> boolean
; lst: list
; return: list
(define filter (-> fn lst
    (_filter fn lst (list))))

(define _filter (-> fn src dst
    (locals 
        first (head src)
        rest (tail src))
    (if (empty? src)
        dst
       (if (fn first)
            (cons first (_filter fn rest dst))
            (_filter fn rest dst)))))

; Takes a list and returns a new list where each item of the
; source list has been evaluated by the passed function.
;
; fn: lst[i] -> any
; lst: list
; return: list
(define map (-> fn lst
    (_map fn lst (list))))

(define _map (-> fn src dst
    (if (empty? src)
        dst
        (cons
            (fn (head src))
            (_map fn (tail src) dst)))))
            
